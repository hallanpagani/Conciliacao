@model ConciliacaoModelo.model.adm.Usuario

@{
    Layout = "~/Views/Shared/Genericas/_Cadastro.cshtml";
    ViewBag.Title = "Cadastrar usuários";
    ViewBag.IconeTopo = "fa-comments";
    ViewBag.NomeDaJanela = "Cadastro de usuários";
    ViewBag.Tamanho = "col-lg-6 ";
}

<form action="@Url.Action("CadastrarUsuario", "usuario")" method="POST" id="smart-form-register" class="smart-form client-form">
    @Html.AntiForgeryToken()
    @Html.ValidationBootstrap()
    @Html.HiddenFor(m => m.Id)
    <fieldset>
        
        <section>
            <label class="" for="Contas">Conta</label>
            <select id="Contas" name="IdConta" class="requerido" style="width:100%">
                @if (!Equals(Model.IdConta, 0) )
                {
                    <option value="@Model.IdConta">@Model.ds_conta</option>
                }
            </select>
        </section>

        <section>
            <label class="input">
                <i class="icon-append fa fa-user"></i>
                <input type="text" name="nomedousuario" placeholder="Nome do usuário *" id="username" autocomplete="off" value="@Model.NomeDoUsuario" maxlength="10" autofocus="true">
                <b class="tooltip tooltip-bottom-right">Usado para mostrar o nome do usuário no sistema</b>
            </label>
        </section>
        <section>
            <label class="input">
                <i class="icon-append fa fa-envelope"></i>
                <input type="text" name="Email" placeholder="Email para login *" id="email" autocomplete="off" value="@Model.Email" maxlength="100">
                <b class="tooltip tooltip-bottom-right">Utilizado como login para entrar no sistema</b>
            </label>
        </section>
        <section>
            <label class="input">
                <i class="icon-append fa fa-lock"></i>
                <input type="password" name="password" placeholder="Password para o usuário *" id="password" value="@Model.Password" autocomplete="off">
                <b class="tooltip tooltip-bottom-right">Password que o usuário utilizará</b>
            </label>
        </section>
        <section>
            <label class="input">
                <i class="icon-append fa fa-lock"></i>
                <input type="password" name="passwordconfirmacao" placeholder="Confirme o password *" value="@Model.PasswordConfirmacao" autocomplete="off">
                <b class="tooltip tooltip-bottom-right">Confirme o password para o usuário</b>
            </label>
        </section>

        <section>
            <div class="form-group">
                <!-- label class="control-label col-md-12" for="origem">Perfil</"--label -->
                <div class="">
                    <select id="Perfis" name="perfil" class="requerido" style="width:100%">

                        if (!Equals(@Model.perfil, "") && (@Model.perfil != null))
                        {
                        <option value="@Model.perfil">@Model.perfil</option>
                        }

                    </select>
                </div>
            </div>
        </section>

        
        @using (Html.BeginForm("CadastrarUsuario", "usuario", FormMethod.Post, new { @class = "form-horizontal smart-form", enctype = "multipart/form-data" }))
        {

        }



    </fieldset>

    <footer>
        <button type="submit" class="btn btn-primary">
            <i class="fa fa-plus-circle"></i>
            Gravar
        </button>
        <div class="pull-left">
            @Html.ActionLink("Voltar", "ConsultarUsuario", "Usuario", null, new { @class = "btn btn-warning" })
        </div>
    </footer>
    <div class="message">
        <i class="fa fa-check"></i>
        <p>
            Sucesso!
        </p>
    </div>
</form>

@section pagespecific{
    <script type="text/javascript">

        // Validation
        $(function () {

            var Url = '@Url.Action("GetContas", "Conta")';
            $("#Contas").select2({
                placeholder: "Selecione uma conta",
                minimumInputLength: 0,
                language: "pt-BR",
                ajax: {
                    dataType: "json",
                    url: Url,
                    data: function (params) {
                        return {
                            term: params.term // search term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.text };
                            })
                        };
                    },
                    cache: true
                }
            });

            var datas = [{ id: 'Administrador', text: 'Administrador' }, { id: 'Parcial', text: 'Parcial' }];
            $("#Perfis").select2({
                placeholder: "Selecione um perfil",
                minimumInputLength: 0,
                data: datas,
                language: $.extend({},
                $.fn.select2.defaults.defaults.language, {
                    noResults: function () {
                        return $("<span>Nenhum resultado encontrado!</span>");
                    }
                })
            });

            


            /*  ViewBag.Notification */
            /*
             * Smart Notifications
             */

            // Validation
            $("#smart-form-register").validate({
                // Rules for form validation
                rules: {
                    nomedousuario: {
                        required: true
                    },
                    email: {
                        required: true
                    },
                    password: {
                        required: true,
                        minlength: 4,
                        maxlength: 20
                    },
                    passwordconfirmacao: {
                        required: true,
                        minlength: 4,
                        maxlength: 20,
                        equalTo: '#password'
                    }
                },

                // Messages for form validation
                messages: {
                    nomedousuario: {
                        required: 'Por favor, informe o nome para o usuário',
                    },
                    email: {
                        required: 'Por favor, insira um login',
                        email: 'Por favor, insira um login válido'
                    },
                    password: {
                        required: 'Por favor, insira o password',
                        minlength: 'Digite ao menos 4 caracteres'
                    },
                    passwordconfirmacao: {
                        required: 'Por favor, insira o password mais uma vez',
                        minlength: 'Digite ao menos 4 caracteres',
                        equalTo: 'Por favor, insira o mesmo password do campo anterior'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });
        });
    </script>
}
