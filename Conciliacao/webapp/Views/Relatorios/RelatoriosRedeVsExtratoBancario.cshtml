@model Conciliacao.Models.Relatorios.RedeVsExtratoBancarioViewModel
@using Conciliacao.App_Helpers.Componentes

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "RelatoriosRedeVsTEF";
}

@section cssespecific{
    <style>
        #datatable_tabletools span {
            display: none;
        }

        .smart-form .inline-group .checkbox, .smart-form .inline-group .radio {
            margin-right: 9px !important;
        }
    </style>
}

<div id="content">

    <div class="well padding-5 " style="margin-bottom: 0px!important;">
        <form action="/Relatorios/RelatoriosRedeVsExtratoBancario" class="smart-form" id="pesquisar" method="POST">
            @Html.Partial("_ValidationSummary")
            <div class="row">
                <section class="col col-sm-12 col-md-2 col-lg-2">
                    <label for="tp_agendamento">Período</label>
                    <div>
                        @Html.DropDownList("tp_data", null, new { @class = "form-control" })
                    </div>
                </section>

                <div class="col col-sm-12 col-md-4 col-lg-3">
                    <label class="" for="filtro_data">Período de</label>
                    <script>
                        function Limpar() {
                            document.getElementById('datainicio').value = "";
                            document.getElementById('datafinal').value = "";
                        }

                        function SetDtInicial(dia, mes, ano) {
                            document.getElementById('datainicio').value = preencheZerosInt(dia, 2) + "/" + preencheZerosInt(mes, 2) + "/" + preencheZerosInt(ano, 4);
                        }

                        function SetDtFinal(dia, mes, ano) {
                            document.getElementById('datafinal').value = preencheZerosInt(dia, 2) + "/" + preencheZerosInt(mes, 2) + "/" + preencheZerosInt(ano, 4);
                        }

                        function SetHoje() {
                            var data = new Date();

                            SetDtInicial(data.getDate(), data.getMonth() + 1, data.getFullYear());
                            SetDtFinal(data.getDate(), data.getMonth() + 1, data.getFullYear());
                        }

                        function SetOntem() {
                            var data = new Date();

                            data.setDate(data.getDate() - 1);

                            SetDtInicial(data.getDate(), data.getMonth() + 1, data.getFullYear());
                            SetDtFinal(data.getDate(), data.getMonth() + 1, data.getFullYear());
                        }

                        function SetAmanha() {
                            var data = new Date();

                            data.setDate(data.getDate() + 1);

                            SetDtInicial(data.getDate(), data.getMonth() + 1, data.getFullYear());
                            SetDtFinal(data.getDate(), data.getMonth() + 1, data.getFullYear());
                        }

                        function SetMesPassado() {
                            //Inicial
                            var data = new Date();
                            data.setMonth(data.getMonth() - 1);
                            SetDtInicial(1, data.getMonth() + 1, data.getFullYear());
                            //Final
                            data = new Date(data.getFullYear(), data.getMonth() + 1, 0);
                            SetDtFinal(data.getDate(), data.getMonth() + 1, data.getFullYear());
                        }

                        function SetMesAtual() {
                            //Inicial
                            var data = new Date();
                            SetDtInicial(1, data.getMonth() + 1, data.getFullYear());
                            //Final
                            data = new Date(data.getFullYear(), data.getMonth() + 1, 0);
                            SetDtFinal(data.getDate(), data.getMonth() + 1, data.getFullYear());
                        }

                        function SetProximoMes() {
                            //Inicial
                            var data = new Date();
                            data.setMonth(data.getMonth() + 1);
                            SetDtInicial(1, data.getMonth() + 1, data.getFullYear());
                            //Final
                            data = new Date(data.getFullYear(), data.getMonth() + 1, 0);
                            SetDtFinal(data.getDate(), data.getMonth() + 1, data.getFullYear());
                        }

                        function preencheZeros(valor, tamanho) {
                            var result = valor;

                            if (result != '') {
                                var contador = result.length;

                                if (result.length < tamanho) {
                                    do {
                                        result = "0" + result;
                                        contador += 1;
                                    } while (contador < tamanho)
                                }
                            }

                            return result;
                        }

                        function preencheZerosInt(valor, tamanho) {
                            return preencheZeros(valor.toString(), tamanho);
                        }

                    </script>

                    <div class="row">
                        <section class="col col-sm-12 col-md-3 col-lg-5" style="padding-right: 1px !important;padding-left: 0px !important;">
                            @Html.TextBoxPadraoFor(model => model.DataInicio, new { @filtrar = "", @onclick = "this.focus();this.select()" })
                        </section>

                        <section class="col col-sm-12 col-md-3 col-lg-7" style="padding-left: 2px !important;">
                            <div class="input-group">
                                @Html.TextBoxPadraoFor(model => model.DataFinal, new { @filtrar = "", @onclick = "this.focus();this.select()" })
                                <div class="input-group-btn">
                                    <button class="btn btn-default btn-primary dropdown-toggle" id="txtPeriodo_btnOpcoes" data-toggle="dropdown" type="button">
                                        <i class="fa fa-list"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a href="#" onclick="SetOntem();">Ontem</a></li>
                                        <li><a href="#" onclick="SetHoje();">Hoje</a></li>
                                        <li><a href="#" onclick="SetAmanha();">Amanhã</a></li>
                                        <li class="divider"></li>
                                        <li><a href="#" onclick="SetMesPassado();">Mês passado</a></li>
                                        <li><a href="#" onclick="SetMesAtual();">Mês atual</a></li>
                                        <li><a href="#" onclick="SetProximoMes();">Próximo mês</a></li>
                                        <li class="divider"></li>
                                        <li><a href="#" onclick="Limpar();">Limpar</a></li>
                                    </ul>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>

                <section class="col-sm-12 col-md-3 col-lg-3">
                    <label class="label">Situação</label>
                    <div class="inline-group">
                        <label class="radio" style="margin-top:0px !important">
                            @Html.RadioButton("tp_situacao", "0")
                            <i></i>Conciliados
                        </label>
                        <label class="radio">
                            @Html.RadioButton("tp_situacao", "1")
                            <i></i>Ñ.Conciliados
                        </label>
                        <label class="radio">
                            @Html.RadioButton("tp_situacao", "2")
                            <i></i>Todos
                        </label>
                    </div>
                </section>

                <section class="col col-sm-12 col-md-1 col-lg-1">
                    <label class="">&nbsp;</label>
                    <div>
                        @{ /* style="margin-top: 16px !important; padding: 6px 12px !important;" */ }
                        @Html.BotaoFiltrar()
                    </div>
                </section>

            </div>
        </form>
    </div>

    <div class="row no-padding no-margin">

        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <ul id="sparks" class="">

                <li class="">
                    <h4> <span class="" style="text-align: center;" id="labelagendamento">Filtro: </span></h4>
                </li>

                <li class="sparks-info">
                    <h5> &nbsp;&nbsp; Qtd. de registros <span class="txt-color-black" style="text-align: right;" id="at">@Model.ListaRedeVsExtratoBancario.AsEnumerable().Count().ToString() </span></h5>
                </li>

                <li class="sparks-info">
                    <h5> &nbsp;&nbsp; Total conciliado <span class="txt-color-purple" style="text-align: right;" id="at">@Model.ListaRedeVsExtratoBancario.AsEnumerable().Where(c => c.is_encontrado == 1).Sum(o => o.vl_mvto).ToString("#,##0.00") </span></h5>
                </li>

                <li class="sparks-info">
                    <h5> &nbsp;&nbsp; Total aberto <span class="txt-color-greenDark" style="text-align: right;" id="at">@Model.ListaRedeVsExtratoBancario.AsEnumerable().Where(c => c.is_encontrado == 0).Sum(o => o.vl_mvto).ToString("#,##0.00") </span></h5>
                </li>

                <li class="sparks-info">
                    <h5> &nbsp;&nbsp; Total geral <span class="txt-color-greenDark" style="text-align: right;" id="at">@Model.ListaRedeVsExtratoBancario.AsEnumerable().Sum(o => o.vl_mvto).ToString("#,##0.00") </span></h5>
                </li>

            </ul>
        </div>
    </div>


    <div class="row">
        <section id="widget-grid" class="">

            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false"
                     data-widget-sortable="false"
                     data-widget-deletebutton="false"
                     data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-list"></i> </span>
                        <h2>Listar conciliação Rede x Extrato Bancário</h2>
                    </header>
                    <div class="row">
                        <!-- NEW WIDGET START -->
                        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                           <!-- Html.ActionLink("Cadastrar", "Pagar", "Financeiro", null, new { class = "btn btn-danger", style = "margin-bottom: 5px !important;" })
                            <div class="pull-right">
                                <a class="btn btn-info" id="deletar_selecionados" disabled="disabled">Deletar selecionados</a>
                            </div> -->
                            <!-- Widget ID (each widget will need unique ID)-->
                            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-2"
                                 data-widget-editbutton="false"
                                 data-widget-fullscreenbutton="true"
                                 data-widget-sortable="false"
                                 data-widget-deletebutton="false"
                                 data-widget-togglebutton="false">
                                <!-- widget options:
                                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                                data-widget-colorbutton="false"
                                data-widget-editbutton="false"
                                data-widget-togglebutton="false"
                                data-widget-deletebutton="false"
                                data-widget-fullscreenbutton="false"
                                data-widget-custombutton="false"
                                data-widget-collapsed="true"
                                data-widget-sortable="false"

                                -->
                                <header>
                                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                                    <h2>Rede x Extrato Bancário</h2>
                                </header>
                                <!-- widget div-->
                                <!-- widget edit box -->
                                <div class="jarviswidget-editbox">
                                    <!-- This area used as dropdown edit box -->

                                </div>
                                <!-- end widget edit box -->
                                <!-- widget content -->
                                <div class="widget-body no-padding">
                                    <table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%">
                                        <thead>
                                            <tr>
                                                <th style="width: 80px;">
                                                    Conciliado
                                                </th>
                                                <th style="width: 80px;">
                                                    Conta
                                                </th>
                                                <th style="width: 80px;">
                                                    Histórico
                                                </th>
                                                <th style="width: 74px;">
                                                    Dt.Movimentação
                                                </th>
                                                <th style="width: 80px;">
                                                    Valor.Movimento
                                                </th>

                                                
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.ListaRedeVsExtratoBancario)
                                            {

                                                <tr style="@if (item.is_encontrado == 1) {
                                                           @Html.Raw("background-color: #daffdd;");
                                                        }
                                                        else
                                                        {
                                                           @Html.Raw("background-color: #ffc6c6;")
                                                        }" >

                                                    <td style="width: 80px;">
                                                        @if (item.is_encontrado == 1) {
                                                           @Html.Raw("SIM");
                                                        }
                                                        else
                                                        {
                                                           @Html.Raw("NÃO")
                                                        }
                                                    </td>

                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.ds_conta)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.ds_historico)
                                                    </td>

                                                    <td style="width: 74px; text-align: center ">
                                                        <span>@String.Format("{0:yyyyMMdd}", item.dt_mvto)</span>  @Html.DisplayFor(modelItem => item.data_string)
                                                    </td>
                                                    
                                                    <td style="text-align: right">
                                                        @Html.DisplayFor(modelItem => item.vl_mvto)
                                                    </td>
                                                    
                                                </tr>

                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <!-- end widget content -->
                                <!-- end widget div -->
                            </div>
                            <!-- end widget -->

                        </article>
                    </div>
                </div>
            </article>
        </section>
    </div>
</div>


@section pagespecific {
    <script src="~/scripts/terceiros/data.js" type="text/javascript"></script>
    <script src="~/scripts/terceiros/maskmoney.min.js" type="text/javascript"></script>

    <script type="text/javascript">

        $("#datainicio").mask("99/99/9999");
        $("#datafinal").mask("99/99/9999");

        var today = new Date().toLocaleDateString();
        $('.btnpagamento').on('click', function () {
            $("#idpagar").val($(this).data("id"));
            $("#vl_baixa").val(parseFloat($(this).data("saldo")).toFixed(2).replace(',', '').replace('.', ','));
            $('#vl_max').val(parseFloat($(this).data("saldo")).toFixed(2).replace(',', '').replace('.', ','));
            $('#dt_pgto').attr("value", today);
            $('.modal-efetuar-baixa').modal('show');
            $('#vl_baixa').select();

        });

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

          /*  $('#redes').on("select2:select", function (e) {
                console.log($('#redes').select2('data')[0].text);
                $('#filtro_nm_rede').val($('#redes').select2('data')[0].text); // what you would like to happen
            });

            var Url = 'Url.Action("GetRedes", "Redes")';
            $("#Redes").select2({
                placeholder: "Selecione uma rede",
                minimumInputLength: 0,
                allowClear: true,
                language: $.extend({},
                $.fn.select2.defaults.defaults.language, {
                    noResults: function () {
                        return $("<span>Nenhum resultado encontrado!</span>");
                    },
                    inputTooShort: function (e) { var t = e.minimum - e.input.length, n = "Digite " + t + " ou mais caracteres"; return n }
                }),
                ajax: {
                    dataType: "json",
                    url: Url,
                    data: function (params) {
                        return {
                            term: params.term // search term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.text };
                            })
                        };
                    },
                    cache: true
                }
            });*/


          /*  var Url = 'Url.Action("PagarBaixa", "Financeiro")';
            $("#btn-efetuar-baixa").click(function () {
                $.ajax({
                    type: 'POST',
                    url: Url + "?id=" + $("#idpagar").val() + "&vl_baixa=" + $("#vl_baixa").val().replace('.', '').replace(',', '.') + "&dt_pgto=" + $("#dt_pgto").val() + "&ds_obs_baixa=" + $("#ds_obs_baixa").val() + "&tp_forma_pagamento=" + $("#tp_forma_pagamento").val()
                        ,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        if (data.Sucesso) {
                            window.location.reload();
                        }
                        $('.modal-efetuar-baixa').modal('hide');
                    }
                });
            });*/


            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            /* TABLETOOLS */
            var table = $('#datatable_tabletools').DataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                stateSave: true,
                select: { style: 'multi' },
                language: {
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Mostrando _MENU_ por pág&nbsp;&nbsp;",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                },


                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'Tl >r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [

                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "AllPayments",
                           "sPdfMessage": "",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sButtonText": "Impr.",
                           "sMessage": "Gerado por AllPayments <i>(Esc para fechar)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "order": [[0, "desc"]],
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
                "pageLength": 50,
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

           /* $('#datatable_tabletools tbody').on('click', 'tr', function () {
                $(this).toggleClass('selected');

                if (table.rows('.selected').data().length > 1) {
                    $('#deletar_selecionados').removeAttr('disabled');
                } else {
                    $('#deletar_selecionados').attr('disabled', 'disabled');
                }
            });*/

         /*   $('#deletar_selecionados').click(function () {

                $.SmartMessageBox({
                    title: "Deseja continuar?",
                    content: "O registro será perdido!",
                    buttons: '[Não, cancelar!][Sim, continuar!]'
                }, function (ButtonPressed) {
                    if (ButtonPressed === "Sim, continuar!") {
                        var ids = $.map(table.rows('.selected').data(), function (item) {
                            return item[0];
                        });

                        var Url = ' Url.Action("DeletaPagarVarios", "Financeiro")';
                        $.ajax({
                            type: 'POST',
                            url: Url + "?lista=" + ids,
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {
                                if (data.Sucesso) {
                                    table.rows('.selected').remove().draw();
                                    $('#deletar_selecionados').attr('disabled', 'disabled');
                                }

                            }
                        });
                    }
                });
                 
            }); */

        });

    </script>

    @Scripts.Render("~/scripts/datatables/js")
}

