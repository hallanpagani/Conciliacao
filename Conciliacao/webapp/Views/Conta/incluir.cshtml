@model ConciliacaoModelo.model.adm.Conta

@{
    Layout = "~/Views/Shared/Genericas/_Cadastro.cshtml";
    ViewBag.Title = "Cadastrar conta";
    ViewBag.IconeTopo = "fa-comments";
    ViewBag.NomeDaJanela = "Cadastro de contas do sistema";
    ViewBag.Tamanho = "col-lg-6 ";
}

<form action="@Url.Action("CadastrarConta", "Conta")" method="POST" id="smart-form-register" class="smart-form client-form">
    @Html.AntiForgeryToken()
    @Html.ValidationBootstrap()
    @Html.HiddenFor(m => m.Id)
    <fieldset>
        <section>
            <label class="input">
                <i class="icon-append fa fa-user"></i>
                <input type="text" name="DsLogin" placeholder="Nome da conta *" id="DsLogin" autocomplete="off" value="@Model.DsLogin" maxlength="10" autofocus="true">
                <b class="tooltip tooltip-bottom-right">Usado para mostrar o nome da conta</b>
            </label>
        </section>
    </fieldset>

    <footer>
        <button type="submit" class="btn btn-primary">
            <i class="fa fa-plus-circle"></i>
            Gravar
        </button>
        <div class="pull-left">
            @Html.ActionLink("Voltar", "ConsultarConta", "Conta", null, new { @class = "btn btn-warning" })
        </div>
    </footer>
    <div class="message">
        <i class="fa fa-check"></i>
        <p>
            Sucesso!
        </p>
    </div>
</form>

@section pagespecific{
    <script type="text/javascript">

        // Validation
        $(function () {

            
            // Validation
            $("#smart-form-register").validate({
                // Rules for form validation
                rules: {
                    DsLogin: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    DsLogin: {
                        required: 'Por favor, informe um nome para a conta',
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });
        });
    </script>
}
